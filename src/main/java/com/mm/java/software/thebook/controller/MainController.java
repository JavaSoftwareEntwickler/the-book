package com.mm.java.software.thebook.controller;

import com.mm.java.software.thebook.model.UserName;
import com.mm.java.software.thebook.service.UserNameService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;


@Controller    // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /user (after Application path)
public class MainController {

    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private UserNameService userNameService;

    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser(@RequestParam String name, @RequestParam String email) {
        UserName userName = new UserName(name, email);
        return userNameService.addUserName(userName) ? "Aggiunto User nome : " + name : "Non aggiunto email gi√† presente";
    }

    @GetMapping(path = "/getAll")
    public @ResponseBody List<UserName> getAllUsers() {
        return userNameService.getAllUserName();
    }

    // esempio url chiamata http://localhost:8080/user/getUser?email=Lollo@pippogebbo.it
    @GetMapping(path = "/getUser", params = {"email"})
    public @ResponseBody UserName getUserByEmail(String email) {
        return userNameService.getUserByEmail(email).orElseGet(UserName::new);
    }
    // esempio url chiamata http://localhost:8080/user/getUserName/emailDiProva@gmail.com
    @GetMapping("/getUserName/{email}")
    public @ResponseBody String getName(@PathVariable String email) {
        return userNameService.getName(email);
    }
}
